配置身份以便区别提交者，命令如下：
git config --global user.name "YingfuXu" 
git config --global user.email "y.xu-6@tudelft.nl"

配置完成后可以使用不带参数的命令查看是否配置成功：
git config --global user.name 
git config --global user.email


本地操作：
创建git可以管理的仓库，在工作区目录下操作： git init

创建了一个名为 v1.0 的分支: git branch v1.0

把文件修改添加到暂存区： git add 文件名 / git add . （添加工作区全部文件）  

把暂存区的所有内容提交到当前分支： git commit -m "修改情况记录便于日后管理"  （创建Git版本库时，Git自动为我们创建了唯一一个master分支，所以，现在，git commit就是往master分支上提交更改。）

将分支切换到 v1.0 : git checkout v1.0

合并分支操作（切换到主分支下进行）： git merge v1.0 

删除分支： git branch -D v1.0

远程操作： （ https://www.yiibai.com/git/git_push.html ）
在Github网站上建立一个空的远程库 Create a new repository

在本地工作区中，将本地库与远程库（如：YingfuXu/paparazziPractice）关联： git remote add origin git@github.com:YingfuXu/paparazziPractice.git ，远程库的名字就是origin，这是Git默认的叫法，也可以改成别的

将本地推送到远程： git push 远程主机名 本地分支名:远程分支名

git push -u origin master  ： 将本地的master分支推送到origin主机，同时指定origin为默认主机，后面就可以不加任何参数使用 git push 了。

远程拉取：










